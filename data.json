{
  "flashcards": [
    {"q":"What is a tabu list in Tabu Search?","a":"A memory structure that records recent moves or solutions to prevent revisiting them and avoid cycles."},
    {"q":"What is tabu tenure?","a":"The number of iterations a move or solution remains classified as tabu before it can be reconsidered."},
    {"q":"What are aspiration criteria in Tabu Search?","a":"Conditions allowing tabu moves to be accepted if they result in solutions better than a dynamic threshold."},
    {"q":"What is candidate selection in Tabu Search?","a":"The process of choosing a subset of the neighborhood to evaluate at each iteration."},
    {"q":"Define intensification in metaheuristics.","a":"Focusing the search on promising regions to refine solutions locally."},
    {"q":"Define diversification in metaheuristics.","a":"Exploring new or less-visited areas of the search space to avoid premature convergence."},
    {"q":"What is Simulated Annealing?","a":"A probabilistic optimization algorithm inspired by the annealing process in metallurgy."},
    {"q":"What is a cooling schedule in Simulated Annealing?","a":"A plan that determines how the temperature parameter decreases over time."},
    {"q":"What is the Metropolis acceptance criterion?","a":"A rule that accepts worse solutions with probability exp((f(i)−f(j))/T) where T is temperature."},
    {"q":"Define a neighborhood in local search.","a":"A set of solutions obtained by small modifications of the current solution."},
    {"q":"What is a k-opt move?","a":"A local search operator that replaces k edges in a solution with k different edges."},
    {"q":"What is the difference between first-improvement and best-improvement local search?","a":"First-improvement accepts the first better neighbor found; best-improvement evaluates all neighbors and picks the best."},
    {"q":"What is a random restart strategy?","a":"Repeatedly running local search from different random initial solutions to escape local optima."},
    {"q":"What is a genotype in evolutionary algorithms?","a":"An encoded representation (often a string of genes) of a candidate solution."},
    {"q":"What is a phenotype in evolutionary algorithms?","a":"The expressed solution in problem-specific terms decoded from the genotype."},
    {"q":"Name three crossover operators in genetic algorithms.","a":"One-point crossover, two-point crossover, and uniform crossover."},
    {"q":"Name two mutation operators in genetic algorithms.","a":"Bit-flip mutation and swap mutation."},
    {"q":"What is roulette-wheel (fitness-proportionate) selection?","a":"A selection method where the probability of choosing an individual is proportional to its fitness."},
    {"q":"What is tournament selection?","a":"A selection method where several individuals compete and the fittest in the group is chosen."},
    {"q":"What is rank-based selection?","a":"A selection method where individuals are ranked by fitness and selection probabilities depend on rank."},
    {"q":"What is lexicase selection?","a":"Test cases are randomly ordered and candidates are filtered one case at a time until one remains."},
    {"q":"What is linear fitness scaling?","a":"A method that transforms fitness by f′=a f+b to control selection pressure."},
    {"q":"What is power-law fitness scaling?","a":"A non-linear transformation of fitness by raising it to a power k."},
    {"q":"What is σ-truncation scaling?","a":"A scaling that reduces overrepresentation by setting f′=max(0,f−(μ−cσ))."},
    {"q":"What is takeover time?","a":"The number of generations until the best individual’s genetic material dominates the population."},
    {"q":"What is selective pressure?","a":"The degree to which better solutions are favored during selection."},
    {"q":"What is genetic drift?","a":"Random fluctuations in allele frequencies that can lead to fixation independent of fitness."},
    {"q":"What is the founder effect?","a":"Loss of genetic diversity when a small group colonizes a new area."},
    {"q":"What are punctuated equilibria?","a":"Periods of little change followed by rapid evolutionary leaps."},
    {"q":"What is optimal mixing in GOMEA?","a":"An operator that mixes gene subsets based on learned linkage without random recombination."},
    {"q":"What are linkage trees?","a":"Hierarchical structures learned to identify dependent gene groups for mixing."},
    {"q":"What is a messy genetic algorithm?","a":"A GA with variable-length genotypes using (label,value) pairs, allowing incomplete or redundant genes."},
    {"q":"What is gene duplication in evolutionary algorithms?","a":"A mechanism where genes are copied, creating redundancy for memory and adaptation."},
    {"q":"What is the inversion operator?","a":"A genetic operator that reverses a subsequence of genes to preserve related schemata."},
    {"q":"What is partial complement?","a":"Replacing a certain subset of genes with opposite values to increase diversity."},
    {"q":"What is epistasis?","a":"Interaction between genes where the effect of one gene depends on the alleles of others."},
    {"q":"What is a deceptive problem?","a":"A problem where combining high-fitness low-order schemata leads away from the global optimum."},
    {"q":"What does the No Free Lunch theorem state?","a":"All optimization algorithms perform equally when averaged over all possible problems."},
    {"q":"What does Holland’s schema theorem describe?","a":"The propagation of schemata over generations under selection, crossover, and mutation."},
    {"q":"What is the building-block hypothesis?","a":"The idea that good solutions form by combining low-order, high-fitness schemata."},
    {"q":"What are Evolutionary Strategies (ES)?","a":"Population-based optimizers using real-valued vectors and self-adaptive mutation."},
    {"q":"What is Differential Evolution (DE)?","a":"An algorithm that perturbs candidate solutions by scaled differences of population members."},
    {"q":"What is Evolutionary Programming (EP)?","a":"An EA variant focusing on mutation on finite state machines or real values without crossover."},
    {"q":"What is Genetic Programming (GP)?","a":"An EA that evolves computer programs represented as trees."},
    {"q":"What are classifier systems in GBML?","a":"Rule-based systems that evolve condition-action pairs for decision-making."},
    {"q":"What is the MAP-Elites algorithm?","a":"A quality-diversity algorithm storing elites in a grid over behavioral features."},
    {"q":"What is Novelty Search?","a":"A method that rewards behavioral novelty rather than fitness to drive exploration."},
    {"q":"What is NSLC?","a":"Novelty Search with Local Competition, balancing exploration and fitness."},
    {"q":"What is cooperative coevolution?","a":"An approach where subcomponents evolve in separate populations and combine for evaluation."},
    {"q":"What is competitive coevolution?","a":"An approach where populations evolve adversarially, such as predators vs. prey."}
  ],
  "multipleChoice": [
    {"question":"What does the tabu list store?","choices":["All visited solutions","Recent moves or solutions","The global best solution","Random candidate moves"],"answer":"Recent moves or solutions"},
    {"question":"What does tabu tenure determine?","choices":["The size of the tabu list","How long a move remains tabu","The neighborhood size","The acceptance probability"],"answer":"How long a move remains tabu"},
    {"question":"Which allows a tabu move to be accepted under certain conditions?","choices":["Diversification criteria","Aspiration criteria","Cooling schedule","Mutation operator"],"answer":"Aspiration criteria"},
    {"question":"What is candidate selection in Tabu Search?","choices":["Selecting random solutions","Choosing a subset of the neighborhood","Applying crossover operators","Restarting the search"],"answer":"Choosing a subset of the neighborhood"},
    {"question":"What is intensification in metaheuristics?","choices":["Exploring random regions","Refining search in promising areas","Increasing population size","Applying more mutation"],"answer":"Refining search in promising areas"},
    {"question":"What is diversification in metaheuristics?","choices":["Focusing on one solution","Exploring new regions of the search space","Reducing mutation rate","Using local search only"],"answer":"Exploring new regions of the search space"},
    {"question":"Simulated Annealing is inspired by which process?","choices":["Natural selection","Metallurgical annealing","Chemical reactions","Particle swarm behavior"],"answer":"Metallurgical annealing"},
    {"question":"What does a cooling schedule control?","choices":["Mutation rate","Selection pressure","Temperature decrease","Population size"],"answer":"Temperature decrease"},
    {"question":"The Metropolis criterion accepts worse solutions with probability:","choices":["exp((f(j)−f(i))/T)","exp((f(i)−f(j))/T)","1/(1+exp((f(i)−f(j))/T))","T/(T+Δf)"],"answer":"exp((f(i)−f(j))/T)"},
    {"question":"What defines a neighborhood in local search?","choices":["All solutions in the space","Random subsets","Small modifications","Global optimum"],"answer":"Small modifications"},
    {"question":"A k-opt move typically:","choices":["Mutates k genes randomly","Reverses k genes","Removes k edges and reconnects","Swaps k solutions"],"answer":"Removes k edges and reconnects"},
    {"question":"First-improvement local search:","choices":["Chooses the best neighbor","Accepts the first better neighbor","Never accepts worse moves","Restarts after each improvement"],"answer":"Accepts the first better neighbor"},
    {"question":"A random restart strategy helps to:","choices":["Accelerate convergence","Escape local optima","Reduce cost","Increase exploitation"],"answer":"Escape local optima"},
    {"question":"In EAs, a genotype is:","choices":["The fitness value","An encoded representation","Algorithm parameters","Evaluation function"],"answer":"An encoded representation"},
    {"question":"A phenotype is:","choices":["The encoded chromosome","The algorithm code","The decoded solution","Population size"],"answer":"The decoded solution"},
    {"question":"Which is not a crossover operator?","choices":["One-point","Uniform","Bit-flip","Two-point"],"answer":"Bit-flip"},
    {"question":"Swap mutation is an example of:","choices":["Crossover","Selection","Mutation","Scaling"],"answer":"Mutation"},
    {"question":"Roulette-wheel selection is based on:","choices":["Random picks","Fitness proportion","Tournament results","Fixed ranks"],"answer":"Fitness proportion"},
    {"question":"Tournament selection pits:","choices":["All at once","Pairs randomly","Groups vs. best","Best vs. worst"],"answer":"Groups vs. best"},
    {"question":"Rank-based selection uses:","choices":["Raw fitness","Individual ranks","Mutation rate","Population size"],"answer":"Individual ranks"},
    {"question":"Lexicase selection filters by:","choices":["Aggregated fitness","Random test-case order","Genotype similarity","Mutation potential"],"answer":"Random test-case order"},
    {"question":"Linear scaling aims to:","choices":["Normalize fitness","Reduce population","Increase mutation","Prevent crossover"],"answer":"Normalize fitness"},
    {"question":"Power-law scaling applies:","choices":["Linear transform","Exponential growth","Fitness^k","Rank adjustment"],"answer":"Fitness^k"},
    {"question":"Sigma-truncation subtracts:","choices":["Mean fitness","Constant","(μ−cσ)","Genetic drift"],"answer":"(μ−cσ)"},
    {"question":"Takeover time measures:","choices":["Eval time","Gens until domination","Mutation freq","Crossover events"],"answer":"Gens until domination"},
    {"question":"Selective pressure refers to:","choices":["Mutation degree","Selection bias","Population size","Neighborhood radius"],"answer":"Selection bias"},
    {"question":"Genetic drift is caused by:","choices":["Selection","Random sampling","High mutation","Crossover"],"answer":"Random sampling"},
    {"question":"The founder effect results from:","choices":["Population merge","Small colonization","High mutation","Elitism"],"answer":"Small colonization"},
    {"question":"Punctuated equilibria describe:","choices":["Gradual change","Stasis + jumps","Random drift","Immediate convergence"],"answer":"Stasis + jumps"},
    {"question":"Optimal mixing in GOMEA replaces:","choices":["Mutation","Crossover+mutation","Selection","Neighborhood"],"answer":"Crossover+mutation"},
    {"question":"Linkage trees identify:","choices":["Pop size","Gene deps","Select parents","Set mutation"],"answer":"Gene deps"},
    {"question":"Messy GA uses:","choices":["Fixed genotypes","Variable (label,value) pairs","No selection","Deterministic mutation"],"answer":"Variable (label,value) pairs"},
    {"question":"Gene duplication helps by:","choices":["Reducing diversity","Storing latent solutions","Preventing mutation","Eliminating crossover"],"answer":"Storing latent solutions"},
    {"question":"Inversion operator:","choices":["Flips bits","Reverses subsequences","Swaps individuals","Deletes genes"],"answer":"Reverses subsequences"},
    {"question":"Partial complement:","choices":["Copies genes","Replaces with complements","Inverts subsequence","Merges populations"],"answer":"Replaces with complements"},
    {"question":"Epistasis measures:","choices":["Independence","Gene interactions","Mutation rate","Pop size"],"answer":"Gene interactions"},
    {"question":"A deceptive problem:","choices":["Lacks optimum","Rewards low-order schemata","Too simple","Random fitness"],"answer":"Rewards low-order schemata"},
    {"question":"NFL theorem implies:","choices":["Some algos best","All equal","Optimization easy","EAs win"],"answer":"All equal"},
    {"question":"Schema theorem predicts:","choices":["Mutation rates","Schema propagation","Cooling schedules","Tabu lists"],"answer":"Schema propagation"},
    {"question":"Building-block hypothesis:","choices":["Schemata discarded","Good schemata combine","Mutation unnecessary","Crossover bad"],"answer":"Good schemata combine"},
    {"question":"ES typically use:","choices":["Binary strings","Real-valued vectors","Tree structures","Rule sets"],"answer":"Real-valued vectors"},
    {"question":"DE perturbs by:","choices":["Mutation","Differences of vectors","Crossover best","Tournament"],"answer":"Differences of vectors"},
    {"question":"EP emphasizes:","choices":["Crossover","Mutation","Niching","Migration"],"answer":"Mutation"},
    {"question":"GP evolves:","choices":["Rules","NNs","Programs as trees","Static parameters"],"answer":"Programs as trees"},
    {"question":"Classifier systems learn:","choices":["Landscapes","Condition-action rules","Cooling","Neighborhood"],"answer":"Condition-action rules"},
    {"question":"MAP-Elites stores:","choices":["One elite","Elites per cell","Random","Single obj"],"answer":"Elites per cell"},
    {"question":"Novelty Search rewards:","choices":["High fitness","Unseen behaviors","Low cost","Big pop"],"answer":"Unseen behaviors"},
    {"question":"NSLC combines novelty with:","choices":["Global opt","Local competition","Tabu lists","SA"],"answer":"Local competition"},
    {"question":"Cooperative coevolution splits:","choices":["Single pop","Subcomponents","Random tasks","Joint genotypes"],"answer":"Subcomponents"},
    {"question":"Competitive coevolution involves:","choices":["Cooperation","Adversarial pops","Solo evolution","Deterministic"],"answer":"Adversarial pops"}
  ],
  "writtenAnswer": [
    {"q":"Explain the purpose of the tabu list.","a":"To record recent moves or solutions and forbid them for a tenure, preventing cycles."},
    {"q":"Describe tabu tenure and its effect.","a":"It sets how long a move stays forbidden—longer tenures increase diversification but slow convergence."},
    {"q":"What are aspiration criteria?","a":"Rules allowing tabu moves if they produce solutions better than a dynamic threshold."},
    {"q":"How does candidate selection help?","a":"By evaluating only part of the neighborhood, it reduces cost while targeting promising moves."},
    {"q":"Define intensification with an example.","a":"Refining search in promising areas, e.g. deeper local search around the best solution."},
    {"q":"Define diversification with an example.","a":"Encouraging exploration of unvisited regions, e.g. random restarts or longer tabu tenure."},
    {"q":"Summarize Simulated Annealing.","a":"An algorithm that probabilistically accepts worse solutions based on a temperature that decreases over time."},
    {"q":"Explain cooling schedules.","a":"They dictate how temperature falls, balancing exploration early and exploitation later."},
    {"q":"What is the Metropolis criterion?","a":"It accepts worse moves with probability exp((f(i)-f(j))/T), letting the search escape local optima."},
    {"q":"Describe a neighborhood in local search.","a":"All solutions reachable by small, defined modifications of the current solution."},
    {"q":"Explain a k-opt move.","a":"It removes k edges in a TSP tour and reconnects the tour in a different way to create a new candidate."},
    {"q":"Compare first- vs best-improvement.","a":"First-improvement stops at the first better neighbor; best-improvement scans all neighbors to pick the best."},
    {"q":"Why use random restarts?","a":"To escape local optima by exploring from multiple random starting points."},
    {"q":"Differentiate genotype vs phenotype.","a":"Genotype is the encoded solution; phenotype is the decoded problem-specific representation."},
    {"q":"How does roulette-wheel selection work?","a":"It selects individuals randomly with probability proportional to their fitness."},
    {"q":"Describe tournament selection.","a":"It selects the best individual from a randomly chosen subset of the population."},
    {"q":"Why use rank-based selection?","a":"To limit the dominance of very fit individuals by assigning selection probabilities by rank."},
    {"q":"Explain lexicase selection.","a":"It filters candidates through test cases one at a time in a random order, keeping only top performers."},
    {"q":"Why apply fitness scaling?","a":"To control selective pressure and maintain diversity by transforming raw fitness values."},
    {"q":"How does linear scaling work?","a":"It applies f′=a f+b to adjust the average and maximum fitness in the population."},
    {"q":"When use power-law scaling?","a":"To non-linearly accentuate or attenuate fitness differences by raising to a power."},
    {"q":"What is σ-truncation?","a":"It subtracts (μ−cσ) from fitness, truncating values below zero to limit outlier dominance."},
    {"q":"Define takeover time.","a":"The number of generations until the best individual’s genotype takes over the population."},
    {"q":"How measure selective pressure?","a":"By takeover time or the ratio of selection probabilities of best vs worst individuals."},
    {"q":"What causes genetic drift?","a":"Random sampling effects in finite populations that shift allele frequencies."},
    {"q":"Explain the founder effect.","a":"Reduced genetic diversity when a small subgroup colonizes a new area."},
    {"q":"What are punctuated equilibria?","a":"Long periods of no change followed by rapid jumps in fitness."},
    {"q":"Describe optimal mixing in GOMEA.","a":"It mixes gene subsets based on learned linkage and accepts only improvements."},
    {"q":"How build linkage trees?","a":"By statistically or empirically estimating gene dependencies among population members."},
    {"q":"What is a messy GA?","a":"A GA with variable-length (label,value) genotypes that can be under- or over-specified."},
    {"q":"Why use gene duplication?","a":"To store latent genes as memory, aiding adaptation in changing environments."},
    {"q":"How does inversion preserve schemata?","a":"By reversing gene order, it maintains beneficial gene groupings intact."},
    {"q":"What is partial complement?","a":"Flipping a subset of genes to their complements to introduce genetic diversity."},
    {"q":"Define epistasis.","a":"A situation where the effect of one gene depends on the alleles present at other genes."},
    {"q":"What is a deceptive problem?","a":"A problem where low-order schemata guide the search away from the global optimum."},
    {"q":"Interpret the No Free Lunch theorem.","a":"No algorithm outperforms all others across every possible problem class."},
    {"q":"What does the schema theorem predict?","a":"How schemata grow or decline under selection, crossover, and mutation."},
    {"q":"Summarize the building-block hypothesis.","a":"Good solutions arise by assembling short, high-quality schemata."},
    {"q":"How do ES differ from GAs?","a":"ES use real-valued vectors and self-adaptive mutation, often without crossover."},
    {"q":"What drives variation in DE?","a":"Scaled differences of randomly chosen population members."},
    {"q":"What characterizes EP?","a":"Focus on mutation of behavioral models (e.g., state machines) without crossover."},
    {"q":"What is evolved in GP?","a":"Tree-structured programs representing executable logic."},
    {"q":"How do classifier systems learn?","a":"By evolving condition-action rules using GA operators to maximize reward."},
    {"q":"What does MAP-Elites demonstrate?","a":"Quality-diversity by maintaining elites across a grid of behavior descriptors."},
    {"q":"Why use Novelty Search?","a":"To avoid deceptive gradients by rewarding new behaviors rather than objective fitness."},
    {"q":"How does NSLC work?","a":"It combines novelty with local fitness competition to balance exploration and exploitation."},
    {"q":"Outline cooperative coevolution.","a":"Divide a problem into subcomponents, evolve each separately, and combine for evaluation."},
    {"q":"What are challenges in competitive coevolution?","a":"Non-transitive fitness relationships, cycling, and need for diversity maintenance."},
    {"q":"What is the 'big valley' hypothesis?","a":"High-quality solutions cluster centrally in the search space, aiding local search."},
    {"q":"What is strategic oscillation in Tabu Search?","a":"Alternating between feasible and infeasible regions to explore boundaries and escape optima."}
  ],
  "trueFalse": [
    {"q":"A tabu list permanently prevents moves from being revisited.","a":false},
    {"q":"Tabu tenure determines how many iterations a move is forbidden.","a":true},
    {"q":"Aspiration criteria never override the tabu status of a move.","a":false},
    {"q":"Candidate selection evaluates the full neighborhood every iteration.","a":false},
    {"q":"Intensification focuses search on promising regions.","a":true},
    {"q":"Diversification narrows the search to a small area.","a":false},
    {"q":"Simulated Annealing can accept worse solutions to escape local optima.","a":true},
    {"q":"A cooling schedule increases temperature over time.","a":false},
    {"q":"The Metropolis criterion uses exp((f(i)−f(j))/T) to accept worse moves.","a":true},
    {"q":"A neighborhood is any random set of solutions.","a":false},
    {"q":"A 2-opt move swaps two edges in a tour.","a":true},
    {"q":"First-improvement always finds the global optimum.","a":false},
    {"q":"Random restarts can help avoid local optima.","a":true},
    {"q":"Genotype refers to the expressed solution.","a":false},
    {"q":"Phenotype is the encoded chromosome.","a":false},
    {"q":"One-point crossover splits parents at a single point.","a":true},
    {"q":"Mutation operators combine two parents.","a":false},
    {"q":"Roulette wheel selection favors higher-fitness individuals.","a":true},
    {"q":"Tournament selection never uses randomness.","a":false},
    {"q":"Rank-based selection bases probability solely on fitness values.","a":false},
    {"q":"Lexicase selection considers test cases one at a time.","a":true},
    {"q":"Linear scaling can adjust selection pressure.","a":true},
    {"q":"Power-law scaling is linear in fitness.","a":false},
    {"q":"Sigma-truncation scaling may set negative fitness to zero.","a":true},
    {"q":"Takeover time measures how quickly one individual dominates.","a":true},
    {"q":"High selective pressure always improves diversity.","a":false},
    {"q":"Genetic drift is a directed evolutionary force.","a":false},
    {"q":"The founder effect reduces genetic diversity.","a":true},
    {"q":"Punctuated equilibria imply gradual continuous change.","a":false},
    {"q":"Optimal mixing eliminates random crossover entirely.","a":true},
    {"q":"Linkage trees identify gene dependencies.","a":true},
    {"q":"Messy GA uses fixed-length genotypes.","a":false},
    {"q":"Gene duplication can provide genetic memory.","a":true},
    {"q":"Inversion breaks schemata by flipping bits randomly.","a":false},
    {"q":"Partial complement increases population diversity.","a":true},
    {"q":"Epistasis refers to independence of gene effects.","a":false},
    {"q":"Deceptive problems mislead by local optima.","a":true},
    {"q":"No Free Lunch theorem favors EAs over other methods.","a":false},
    {"q":"Schema theorem predicts schema growth under GA.","a":true},
    {"q":"Building-block hypothesis discourages combining low-order schemata.","a":false},
    {"q":"Evolutionary Strategies typically use binary strings.","a":false},
    {"q":"Differential Evolution relies on differences among individuals.","a":true},
    {"q":"Evolutionary Programming uses crossover heavily.","a":false},
    {"q":"Genetic Programming evolves tree-based programs.","a":true},
    {"q":"Classifier systems are rule-based evolutionary systems.","a":true},
    {"q":"MAP-Elites stores a single elite solution overall.","a":false},
    {"q":"Novelty Search ignores objective fitness.","a":true},
    {"q":"NSLC integrates novelty with local fitness competition.","a":true},
    {"q":"Cooperative coevolution evolves subcomponents separately.","a":true},
    {"q":"Competitive coevolution always converges to a single solution.","a":false}
  ]
}
